{"version":3,"sources":["components/Header/Header.js","components/Card/Card.js","redux/reducer.js","pages/Archive/Archive.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","href","className","src","alt","Card","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","added","active","expand","expandIngredients","bind","assertThisInitialized","console","log","setState","prevState","_this2","_this$props$recipe","recipe","index","name","type","cook_time","ingredients","onClick","removeFromCart","addToCart","concat","toConsumableArray","reduce","acc","cur","length","React","Component","ADD_TO_CART","REMOVE_FROM_CART","initState","selectedRecipes","requiredIngredients","Archive","recipes","uniqueIngredients","selected","updateList","all","map","e","filter","el","indexOf","sort","axios","get","then","res","data","catch","err","_this3","components_Card_Card","assign","key","connect","payload","store","createStore","arguments","undefined","action","App","es","HashRouter","components_Header_Header","Switch","Route","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c6356bf0.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Header.css'\r\nconst Header = function(props) {\r\n    return (\r\n        <header>\r\n            <a href=\"https://www.paybyphone.com\" className=\"image-wrapper\">\r\n                <img\r\n                    src=\"https://www.burnaby.ca/Assets/city+services/roads+and+traffic/Parking/Pay+By+Phone+logo.png\"\r\n                    alt=\"logo\"\r\n                />\r\n            </a>\r\n            <h1>\r\n                Meal Recipes\r\n            </h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nimport './Card.css'\r\n\r\nclass Card extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            added: false,\r\n            active: '',\r\n            expand: false\r\n        }\r\n        this.expandIngredients = this.expandIngredients.bind(this)\r\n    }\r\n    expandIngredients() {\r\n        console.log(1)\r\n        this.setState((prevState, props) => {\r\n            return {\r\n                expand: !prevState.expand\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { index, name, type, cook_time, ingredients } = this.props.recipe\r\n        return (\r\n            <div className={'card ' + this.state.active}>\r\n                <div\r\n                    className=\"toggle\"\r\n                    onClick={() => {\r\n                        if (!this.state.added) {\r\n                            this.props.addToCart({\r\n                                name,\r\n                                ingredients: [name, ...ingredients]\r\n                            })\r\n                            this.setState({\r\n                                added: true,\r\n                                active: 'active'\r\n                            })\r\n                        } else {\r\n                            this.props.removeFromCart({\r\n                                name\r\n                            })\r\n                            this.setState({\r\n                                added: false,\r\n                                active: ''\r\n                            })\r\n                        }\r\n                    }}\r\n                >\r\n                    {this.state.added ? (\r\n                        <span>\r\n                            Remove <i className=\"fas fa-minus-circle\" />\r\n                        </span>\r\n                    ) : (\r\n                        <span>\r\n                            Add <i className=\"fas fa-plus-circle\" />\r\n                        </span>\r\n                    )}\r\n                </div>\r\n                <div className=\"image-wrapper\">\r\n                    <img\r\n                        src={'http://lorempixel.com/400/200/food/' + index}\r\n                        alt=\"\"\r\n                    />\r\n                </div>\r\n                <h2>{name}</h2>\r\n                <div className=\"info\">\r\n                    <div>\r\n                        <span>Type:</span>\r\n                        {type}\r\n                    </div>\r\n                    <div>\r\n                        <span>Prep Time: </span>\r\n                        {cook_time} mins\r\n                    </div>\r\n                </div>\r\n\r\n                <div\r\n                    className=\"ingredients-title\"\r\n                    onClick={this.expandIngredients}\r\n                >\r\n                    See Ingredients\r\n                </div>\r\n                <p\r\n                    className={\r\n                        this.state.expand ? 'ingredients active' : 'ingredients'\r\n                    }\r\n                >\r\n                    {ingredients.reduce((acc, cur, index) => {\r\n                        return index < ingredients.length - 1\r\n                            ? acc + cur + ', '\r\n                            : acc + cur\r\n                    }, '')}\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Card\r\n","const ADD_TO_CART = 'ADD_TO_CART'\r\nconst REMOVE_FROM_CART = 'REMOVE_FROM_CART'\r\nconst initState = {\r\n    selectedRecipes: [],\r\n    requiredIngredients: []\r\n}\r\n\r\n\r\n\r\nexport function cart(state=initState, action) {\r\n    switch (action.type) {\r\n        case 'ADD_TO_CART':\r\n            return {\r\n                selectedRecipes: [...state.selectedRecipes, action.payload.name],\r\n                requiredIngredients: [...state.requiredIngredients, action.payload.ingredients],\r\n            }\r\n        case 'REMOVE_FROM_CART':\r\n            return {\r\n                requiredIngredients: state.requiredIngredients.filter(e=>{\r\n                    return e[0] !== action.payload.name\r\n                }),\r\n                selectedRecipes: state.selectedRecipes.filter(e => {\r\n                    return e !== action.payload.name\r\n                }),\r\n                \r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport function addToCart(data) {\r\n    return {\r\n        type: ADD_TO_CART,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport function removeFromCart(data) {\r\n    return {\r\n        type: REMOVE_FROM_CART,\r\n        payload: data\r\n    }\r\n}","import React from 'react'\r\nimport Card from '../../components/Card/Card'\r\nimport axios from 'axios'\r\nimport './Archive.css'\r\nimport { addToCart, removeFromCart } from '../../redux/reducer'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Archive extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            recipes: [],\r\n            uniqueIngredients: [],\r\n            selected: 0\r\n        }\r\n        this.updateList = this.updateList.bind(this)\r\n    }\r\n\r\n    updateList() {\r\n        var all = this.props.requiredIngredients\r\n            .map(e => {\r\n                return e.filter((el, index) => {\r\n                    return index !== 0\r\n                })\r\n            })\r\n            .reduce((acc, cur) => {\r\n                console.log(acc)\r\n                return acc.concat(cur)\r\n            }, [])\r\n\r\n        all = all\r\n            .filter((e, index) => {\r\n                return all.indexOf(e) === index\r\n            })\r\n            .sort()\r\n        // console.dir(all)\r\n        return all\r\n    }\r\n\r\n    componentDidMount() {\r\n        const devUrl = './recipes.json'\r\n        // get data from json file\r\n        axios\r\n            .get(devUrl)\r\n            .then(res => {\r\n                console.log(res.data)\r\n                this.setState({\r\n                    recipes: res.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"all-recipes\">\r\n                    {console.log(this.props)}\r\n                    {this.state.recipes.map((e, index) => {\r\n                        return (\r\n                            <Card\r\n                                recipe={Object.assign({}, e, { index: index })}\r\n                                key={index}\r\n                                addToCart={this.props.addToCart}\r\n                                removeFromCart={this.props.removeFromCart}\r\n                                selectedRecipes={this.props.selectedRecipes}\r\n                            />\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className=\"ingredient-list\">\r\n                    <h2>All Ingredients You Need</h2>\r\n                    {this.props.selectedRecipes.length === 0\r\n                        ? 'You have not selected any recipes'\r\n                        : 'For Recipes'}\r\n                    <ul className=\"selected-recipes\">\r\n                        {this.props.selectedRecipes.map((e, index) => {\r\n                            return <li key={index}>{e}</li>\r\n                        })}\r\n                    </ul>\r\n                    <ol>\r\n                        {this.state.selected !==\r\n                        this.props.selectedRecipes.length\r\n                            ? this.updateList().map((e, index) => {\r\n                                  return <li key={index}>{e}</li>\r\n                              })\r\n                            : ''}\r\n                    </ol>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nArchive = connect(\r\n    state => state,\r\n    { addToCart, removeFromCart }\r\n)(Archive)\r\nexport default Archive\r\n","import React, { Component } from 'react'\nimport { HashRouter, Switch, Route } from 'react-router-dom'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\n// page components\n\nimport Header from './components/Header/Header'\nimport Archive from './pages/Archive/Archive'\nimport './App.css'\n\nimport { cart } from './redux/reducer'\n\nconst store = createStore(cart)\n\nclass App extends Component {\n    render() {\n        return (\n            <Provider store={store}>\n                <HashRouter>\n                    <div>\n                        <Header />\n                        <Switch>\n                            <Route path=\"/\" component={Archive} />\n                        </Switch>\n                    </div>\n                </HashRouter>\n            </Provider>\n        )\n    }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}